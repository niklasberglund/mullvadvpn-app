---
name: iOS end-to-end tests
on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    if: github.event.pull_request.merged
    name: End to end tests
    runs-on: niklas-macbook-pro
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure cache
        uses: actions/cache@v3
        with:
          path: ios/${{ env.SOURCE_PACKAGES_PATH }}
          key: ${{ runner.os }}-spm-${{ hashFiles('ios/**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Setup go-lang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.5

      - name: Set up yeetd to workaround XCode being slow in CI
        run: |
          wget https://github.com/biscuitehh/yeetd/releases/download/1.0/yeetd-normal.pkg
          sudo installer -pkg yeetd-normal.pkg -target /
          yeetd &
      - name: Configure Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0.1'
      - name: Configure Rust
        run: rustup target add aarch64-apple-ios-sim

      - name: Configure Xcode project
        run: |
          cp Base.xcconfig.template Base.xcconfig
          cp App.xcconfig.template App.xcconfig
          cp PacketTunnel.xcconfig.template PacketTunnel.xcconfig
          cp Api.xcconfig.template Api.xcconfig
          sed -i "" "s/IOS_DEVICE_PIN_CODE = /IOS_DEVICE_PIN_CODE = $IOS_DEVICE_PIN_CODE/g" UITests.xcconfig
          sed -i "" "s/TEST_DEVICE_IDENTIFIER_UUID = /TEST_DEVICE_IDENTIFIER_UUID = $TEST_DEVICE_IDENTIFIER_UUID/g" UITests.xcconfig
          sed -i "" "s/HAS_TIME_ACCOUNT_NUMBER = /HAS_TIME_ACCOUNT_NUMBER = $HAS_TIME_ACCOUNT_NUMBER/g" UITests.xcconfig
          sed -i "" "s/NO_TIME_ACCOUNT_NUMBER = /NO_TIME_ACCOUNT_NUMBER = $NO_TIME_ACCOUNT_NUMBER/g" UITests.xcconfig
        working-directory: ios/Configurations

      - name: Install xcbeautify
        run: |
          brew update
          brew install xcbeautify

      - name: Run end-to-end-tests
        run: |
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild \
            -project MullvadVPN.xcodeproj \
            -scheme MullvadVPN \
            -testPlan MullvadVPNUITestsSmoke \
            -destination "platform=iOS,id=00008110-001241D836F1801E" \
            test 2>&1 | xcbeautify
        working-directory: ios/
